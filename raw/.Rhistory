library(rlang)
library(rlang, lib.loc = "C:/Program Files/R/R-4.2.2/library")
install.packages("tidyverse")
install.packages("rlang")
install.packages("rlang")
library(cli)
R.Version()$version.string
install.packages("cli")
install.packages("cli")
install.packages("cli")
install.packages("cli")
install.packages("cli")
install.packages("cli")
install.packages("cli")
install.packages("cli")
install.packages("cli")
install.packages("cli")
install.packages("cli")
library(cli)
library(cli)
install.packages("cli")
install.packages("cli")
install.packages("cli")
# Load libraries
library(tidyverse)
library(ggplot2)
library(lattice)
library(ggpubr)
# Load libraries
library(tidyverse)
library(ggplot2)
library(lattice)
library(ggpubr)
# Load libraries
library(tidyverse)
library(ggplot2)
library(lattice)
library(ggpubr)
# Load libraries
library(tidyverse)
library(ggplot2)
library(lattice)
library(ggpubr)
# Load libraries
library(tidyverse)
library(ggplot2)
library(lattice)
library(ggpubr)
# Load libraries
library(tidyverse)
library(ggplot2)
library(lattice)
library(ggpubr)
# Load libraries
library(tidyverse)
library(ggplot2)
library(lattice)
library(ggpubr)
install.packages("cli")
install.packages("cli")
install.packages("cli")
install.packages("cli")
#| echo: true
#| output: false
# Load libraries
## install.packages("remotes")
# remotes::install_github("MatthewBJane/theme_park")
library(ThemePark)
library(tidyverse)
library(ggplot2)
library(lattice)
library(ggpubr)
info
sessionInfo()
system("type R")
(Edited to reflect fact that this is apparently a Windows-specific solution.)
file.path(R.home("bin"), "R")
install.packages("rmarkdown")
install.packages("Rtools")
install.packages("rtools4")
install.packages("knitr")
install.packages(c("foreign", "KernSmooth", "MASS", "nlme", "survival"))
CLEAR
ls
install.packages(tidyverse)
install.packages("tidyverse")
install.packages("reticulate")
install.packages("gt")
# remotes::install_github("MatthewBJane/theme_park")
remotes::install_github("MatthewBJane/theme_park")
install.packages("remotes")
remotes::install_github("MatthewBJane/theme_park")
install.packages("tidytext")
install.packages("languageserver")
installed.packages()
installed.packages("quanteda")
install.packages("quanteda")
install.packages("ggrepel")
ls
sessionInfo()
file.path(R.home("bin"),"R")
library(tidyverse)
library(eurlex)
library(conflicted)
conflict_prefer("select", "dplyr")
conflict_prefer("filter", "dplyr")
all_cited_celex <- elx_make_query( resource_type = "any",
include_citations_detailed = TRUE ) |> elx_run_query()
setwd("C:\gitprojects\uio24emc\raw\")
all_cited_celex <- elx_make_query( resource_type = "any",
include_citations = TRUE, limit = 10 ) |> elx_run_query()
View(all_cited_celex)
all_cited_celex <- elx_make_query( resource_type = "any",
include_citations = TRUE, limit = 1000 ) |> elx_run_query()
all_cited_celex <- elx_make_query( resource_type = "any",
include_citations = TRUE, limit = 100 ) |> elx_run_query()
all_cited_celex <- elx_make_query( resource_type = "any",
include_citations = TRUE, limit = 100 ) |> elx_run_query()
all_cited_celex <- elx_make_query( resource_type = "caselaw",
include_citations = TRUE, limit = 100 ) |> elx_run_query()
View(all_cited_celex)
all_cited_celex <- elx_make_query(resource_type = "caselaw",
include_citations = TRUE, ) |> elx_run_query()
View(all_cited_celex)
setwd("C:/gitprojects/uio24emc/raw/")
pwd
pwd()
getwd()
# Read the first CSV file
df1 <- read.csv("./iu_uio24emc/apps_scraping.csv")
View(df1)
apps_citations <- left_join(df1, all_cited_celex, by = "celex")
View(apps_citations)
write.csv(apps_citations, "./iu_uio24emc/apps_with_citations.csv")
View(all_cited_celex)
df1|> group_by_all(celex) |> summarise(COUNT = n())
df1|> group_by_all('celex') |> summarise(COUNT = n())
df1 summarise(COUNT = n())
df1 |> summarise(COUNT = n())
all_cited_celex <- all_cited_celex %>%
rename(apps_celex = celex) #NEW LEFT OLD RIGHT
View(all_cited_celex)
all_cited_celex <- all_cited_celex %>%
rename(apps_celex = celex) #NEW LEFT OLD RIGHT
setwd("C:/gitprojects/uio24emc/raw/")
df1 <- read.csv("./iu_uio24emc/apps_scraping.csv")
apps_citations <- left_join(df1, all_cited_celex, by = "apps_celex")
View(apps_citations)
write.csv(apps_citations, "./iu_uio24emc/apps_with_citations.csv")
app_citations <- elx_make_query( resource_type = "caselaw",
include_citations_detailed = TRUE ) |> elx_run_query()
all_cited_detailed_celex <- elx_make_query(resource_type = "caselaw",
include_citations_detailed = TRUE, ) |> elx_run_query()
View(apps_citations)
all_cited_detailed_celex <- elx_make_query(resource_type = "caselaw",
include_citations_detailed = TRUE, ) |> elx_run_query()
all_cited_detailed_celex <- elx_make_query(resource_type = "caselaw",
include_lbs = TRUE, ) |> elx_run_query()
all_cited_detailed_celex <- elx_make_query(resource_type = "caselaw",
include_citations_detailed = TRUE, limit=10 ) |> elx_run_query()
View(all_cited_celex)
View(apps_citations)
View(all_cited_detailed_celex)
all_cited_detailed_celex <- elx_make_query(resource_type = "caselaw",
include_citations_detailed = TRUE, ) |> elx_run_query()
elx_make_query(resource_type = "caselaw",
include_citations_detailed = TRUE, )
